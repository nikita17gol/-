class ParkMiller:
    def __init__(self, seed):
        self.seed = seed
        self.multiplier = 16807
        self.modulus = 214748364

    def rand(self):
        self.seed = (self.multiplier * self.seed) % self.modulus
        return self.seed / self.modulus


class ShuffledParkMiller:
    def __init__(self, seed):
        self.generator = ParkMiller(seed)

    def rand(self):
        values = []
        for i in range(0, 16):
            values.append(self.generator.rand())

        # shuffle the values
        for i in range(15, 0, -1):
            j = int(self.generator.rand() * (i+1))
            values[i], values[j] = values[j], values[i]

        # return the first value
        return values[0]


def main():
    seed = 123456789
    park_miller = ParkMiller(seed)
    shuffled_park_miller = ShuffledParkMiller(seed)

    # generate 10 random numbers with Park-Miller generator
    print("Random numbers generated by Park-Miller:")
    for i in range(0, 10):
        print(park_miller.rand())

    # generate 10 random numbers with shuffled Park-Miller generator
    print("\nRandom numbers generated by Shuffled Park-Miller:")
    for i in range(0, 10):
        print(shuffled_park_miller.rand())

if __name__ == "__main__":
    main()
